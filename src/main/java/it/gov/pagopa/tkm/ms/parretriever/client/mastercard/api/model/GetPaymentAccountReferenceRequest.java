/*
 * Payment Account Reference Inquiry API
 * Merchants, Acquirers, or Digital Activity Customers (DACs) can use this service to query the PAR Vault to obtain a Payment Account Reference(PAR), from a Primary Account Number (PAN). PAR provides an industry-aligned approach designed to help link PAN-based transactions to transactions using associated payment tokens, without using the PAN as the linkage mechanism.
 *
 * The version of the OpenAPI document: 1.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.gov.pagopa.tkm.ms.parretriever.client.mastercard.api.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * GetPaymentAccountReferenceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-15T11:20:33.252+02:00[Europe/Berlin]")
public class GetPaymentAccountReferenceRequest {
  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_ENCRYPTED_PAYLOAD = "encryptedPayload";
  @SerializedName(SERIALIZED_NAME_ENCRYPTED_PAYLOAD)
  private Object encryptedPayload;


  public GetPaymentAccountReferenceRequest requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * A unique ID (per client ID) that identifies a particular request. The requestID will be echoed back in the responseID when the request has been processed by the application. 
   * @return requestId
  **/
  @ApiModelProperty(example = "123456", required = true, value = "A unique ID (per client ID) that identifies a particular request. The requestID will be echoed back in the responseID when the request has been processed by the application. ")

  public String getRequestId() {
    return requestId;
  }


  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public GetPaymentAccountReferenceRequest encryptedPayload(Object encryptedPayload) {
    
    this.encryptedPayload = encryptedPayload;
    return this;
  }

   /**
   * Get encryptedPayload
   * @return encryptedPayload
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getEncryptedPayload() {
    return encryptedPayload;
  }


  public void setEncryptedPayload(GetPaymentAccountReferenceRequestEncryptedPayload encryptedPayload) {
    this.encryptedPayload = encryptedPayload;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPaymentAccountReferenceRequest getPaymentAccountReferenceRequest = (GetPaymentAccountReferenceRequest) o;
    return Objects.equals(this.requestId, getPaymentAccountReferenceRequest.requestId) &&
        Objects.equals(this.encryptedPayload, getPaymentAccountReferenceRequest.encryptedPayload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, encryptedPayload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPaymentAccountReferenceRequest {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    encryptedPayload: ").append(toIndentedString(encryptedPayload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

