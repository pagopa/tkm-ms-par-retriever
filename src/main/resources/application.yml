spring:
  application:
    name: Tkm Par Retriever ${HOSTNAME:0}
  batch:
    job:
      enabled: false
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_SERVERS}
      group-id: ${KAFKA_GROUP_ID}
      client-id: ${KAFKA_GROUP_ID}${HOSTNAME:0}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/}

logging:
  level:
    root: ${LOGGING_LEVEL:INFO}
  pattern:
    level: "${LOGGING_PATTERN:%p [${spring.application.name}][%X{traceId}]}"

core:
  parRetrieverService:
    getPar:
      scheduler: ${PAR_RETRIEVER_GET_PAR_SCHEDULER:0 * * * * *}

azure:
  keyvault:
    enabled: true
    client-id: ${AZURE_KEYVAULT_CLIENT_ID}
    client-key: ${AZURE_KEYVAULT_CLIENT_KEY}
    tenant-id: ${AZURE_KEYVAULT_TENANT_ID}
    uri: ${AZURE_KEYVAULT_URI}
  storage:
    default-endpoints-protocol: https
    account-name: ${AZURE_STORAGE_ACCOUNT_NAME}
    account-key: ${AZURE_STORAGE_ACCOUNT_KEY}
    blob-endpoint: ${AZURE_STORAGE_ENDPOINT}

keyvault:
  eventhubLogSaslJaasConfig: ${${AZURE_KEYVAULT_PROFILE:prod}-eventhubLogSaslJaasConfig}
  readQueuePrvPgpKey: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePrvPgpKey}
  readQueuePubPgpKey: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePubPgpKey}
  mastercardResponsePrivateKey: ${${AZURE_KEYVAULT_PROFILE:prod}-mastercardResponsePrivateKey}
  mastercardApiKey: ${${AZURE_KEYVAULT_PROFILE:prod}-mastercardApiKey}
  mastercardKeyStorePwd: ${${AZURE_KEYVAULT_PROFILE:prod}-mastercardKeyStorePwd}
  amexClientId: ${${AZURE_KEYVAULT_PROFILE:prod}-amexClientId}
  amexClientSecret: ${${AZURE_KEYVAULT_PROFILE:prod}-amexClientSecret}
  visaClientId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaClientId}
  visaKeyId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaKeyId}
  visaKeyStorePassword: ${${AZURE_KEYVAULT_PROFILE:prod}-visaKeyStorePassword}
  visaPassword: ${${AZURE_KEYVAULT_PROFILE:prod}-visaPassword}
  visaPrivateKey: ${${AZURE_KEYVAULT_PROFILE:prod}-visaPrivateKey}
  visaServerCertificate: ${${AZURE_KEYVAULT_PROFILE:prod}-visaServerCertificate}
  visaUserId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaUserId}

blobstorage:
  mastercard:
    publicEncryptionKey: azure-blob://${BLOB_STORAGE_NAME}/Public-Key-Encrypt.crt
    signingKeyCert: azure-blob://${BLOB_STORAGE_NAME}/Get_PAR-sandbox.p12
  visa:
    publicCert: azure-blob://${BLOB_STORAGE_NAME}/myProject_keyAndCertBundle.p12

tkm-ms-urls:
  consent-manager: http://localhost:7777/tkm-ms-consent-manager
  card-manager: http://localhost:2001/tkm-ms-card-manager

batch-execution:
  max-number-of-threads: ${MAX_NUMBER_OF_THREADS}
  max-number-of-cards: ${MAX_NUMBER_OF_CARDS}
  amex-par-retrieve-enabled: true
  mastercard-par-retrieve-enabled: true
  visa-par-retrieve-enabled: true
